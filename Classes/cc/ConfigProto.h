// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConfigProto.proto

#ifndef PROTOBUF_ConfigProto_2eproto__INCLUDED
#define PROTOBUF_ConfigProto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Vo.h"
// @@protoc_insertion_point(includes)

namespace protocol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ConfigProto_2eproto();
void protobuf_AssignDesc_ConfigProto_2eproto();
void protobuf_ShutdownFile_ConfigProto_2eproto();

class CConfig;
class SConfig;
class SPushCurrency;

// ===================================================================

class CConfig : public ::google::protobuf::Message {
 public:
  CConfig();
  virtual ~CConfig();

  CConfig(const CConfig& from);

  inline CConfig& operator=(const CConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CConfig& default_instance();

  void Swap(CConfig* other);

  // implements Message ----------------------------------------------

  CConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CConfig& from);
  void MergeFrom(const CConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cmd = 1 [default = 20479];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::google::protobuf::uint32 cmd() const;
  inline void set_cmd(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.CConfig)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 cmd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ConfigProto_2eproto();
  friend void protobuf_AssignDesc_ConfigProto_2eproto();
  friend void protobuf_ShutdownFile_ConfigProto_2eproto();

  void InitAsDefaultInstance();
  static CConfig* default_instance_;
};
// -------------------------------------------------------------------

class SConfig : public ::google::protobuf::Message {
 public:
  SConfig();
  virtual ~SConfig();

  SConfig(const SConfig& from);

  inline SConfig& operator=(const SConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SConfig& default_instance();

  void Swap(SConfig* other);

  // implements Message ----------------------------------------------

  SConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SConfig& from);
  void MergeFrom(const SConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cmd = 1 [default = 20479];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::google::protobuf::uint32 cmd() const;
  inline void set_cmd(::google::protobuf::uint32 value);

  // optional bool mail = 2;
  inline bool has_mail() const;
  inline void clear_mail();
  static const int kMailFieldNumber = 2;
  inline bool mail() const;
  inline void set_mail(bool value);

  // optional bool active = 3;
  inline bool has_active() const;
  inline void clear_active();
  static const int kActiveFieldNumber = 3;
  inline bool active() const;
  inline void set_active(bool value);

  // optional bool firstbuy = 4;
  inline bool has_firstbuy() const;
  inline void clear_firstbuy();
  static const int kFirstbuyFieldNumber = 4;
  inline bool firstbuy() const;
  inline void set_firstbuy(bool value);

  // optional bool task = 5;
  inline bool has_task() const;
  inline void clear_task();
  static const int kTaskFieldNumber = 5;
  inline bool task() const;
  inline void set_task(bool value);

  // optional bool free = 6;
  inline bool has_free() const;
  inline void clear_free();
  static const int kFreeFieldNumber = 6;
  inline bool free() const;
  inline void set_free(bool value);

  // optional bool fri = 7;
  inline bool has_fri() const;
  inline void clear_fri();
  static const int kFriFieldNumber = 7;
  inline bool fri() const;
  inline void set_fri(bool value);

  // optional uint32 yqs = 8;
  inline bool has_yqs() const;
  inline void clear_yqs();
  static const int kYqsFieldNumber = 8;
  inline ::google::protobuf::uint32 yqs() const;
  inline void set_yqs(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.SConfig)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_mail();
  inline void clear_has_mail();
  inline void set_has_active();
  inline void clear_has_active();
  inline void set_has_firstbuy();
  inline void clear_has_firstbuy();
  inline void set_has_task();
  inline void clear_has_task();
  inline void set_has_free();
  inline void clear_has_free();
  inline void set_has_fri();
  inline void clear_has_fri();
  inline void set_has_yqs();
  inline void clear_has_yqs();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 cmd_;
  bool mail_;
  bool active_;
  bool firstbuy_;
  bool task_;
  bool free_;
  bool fri_;
  ::google::protobuf::uint32 yqs_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_ConfigProto_2eproto();
  friend void protobuf_AssignDesc_ConfigProto_2eproto();
  friend void protobuf_ShutdownFile_ConfigProto_2eproto();

  void InitAsDefaultInstance();
  static SConfig* default_instance_;
};
// -------------------------------------------------------------------

class SPushCurrency : public ::google::protobuf::Message {
 public:
  SPushCurrency();
  virtual ~SPushCurrency();

  SPushCurrency(const SPushCurrency& from);

  inline SPushCurrency& operator=(const SPushCurrency& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SPushCurrency& default_instance();

  void Swap(SPushCurrency* other);

  // implements Message ----------------------------------------------

  SPushCurrency* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SPushCurrency& from);
  void MergeFrom(const SPushCurrency& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 cmd = 1 [default = 24576];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::google::protobuf::uint32 cmd() const;
  inline void set_cmd(::google::protobuf::uint32 value);

  // optional uint32 diamond = 2;
  inline bool has_diamond() const;
  inline void clear_diamond();
  static const int kDiamondFieldNumber = 2;
  inline ::google::protobuf::uint32 diamond() const;
  inline void set_diamond(::google::protobuf::uint32 value);

  // optional uint32 card = 3;
  inline bool has_card() const;
  inline void clear_card();
  static const int kCardFieldNumber = 3;
  inline ::google::protobuf::uint32 card() const;
  inline void set_card(::google::protobuf::uint32 value);

  // optional uint32 gold = 4;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 4;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);

  // optional uint32 cdiamond = 5;
  inline bool has_cdiamond() const;
  inline void clear_cdiamond();
  static const int kCdiamondFieldNumber = 5;
  inline ::google::protobuf::uint32 cdiamond() const;
  inline void set_cdiamond(::google::protobuf::uint32 value);

  // optional uint32 ccard = 6;
  inline bool has_ccard() const;
  inline void clear_ccard();
  static const int kCcardFieldNumber = 6;
  inline ::google::protobuf::uint32 ccard() const;
  inline void set_ccard(::google::protobuf::uint32 value);

  // optional uint32 cgold = 7;
  inline bool has_cgold() const;
  inline void clear_cgold();
  static const int kCgoldFieldNumber = 7;
  inline ::google::protobuf::uint32 cgold() const;
  inline void set_cgold(::google::protobuf::uint32 value);

  // optional uint32 err = 8;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 8;
  inline ::google::protobuf::uint32 err() const;
  inline void set_err(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.SPushCurrency)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_diamond();
  inline void clear_has_diamond();
  inline void set_has_card();
  inline void clear_has_card();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_cdiamond();
  inline void clear_has_cdiamond();
  inline void set_has_ccard();
  inline void clear_has_ccard();
  inline void set_has_cgold();
  inline void clear_has_cgold();
  inline void set_has_err();
  inline void clear_has_err();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 cmd_;
  ::google::protobuf::uint32 diamond_;
  ::google::protobuf::uint32 card_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 cdiamond_;
  ::google::protobuf::uint32 ccard_;
  ::google::protobuf::uint32 cgold_;
  ::google::protobuf::uint32 err_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_ConfigProto_2eproto();
  friend void protobuf_AssignDesc_ConfigProto_2eproto();
  friend void protobuf_ShutdownFile_ConfigProto_2eproto();

  void InitAsDefaultInstance();
  static SPushCurrency* default_instance_;
};
// ===================================================================


// ===================================================================

// CConfig

// required uint32 cmd = 1 [default = 20479];
inline bool CConfig::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CConfig::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CConfig::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CConfig::clear_cmd() {
  cmd_ = 20479u;
  clear_has_cmd();
}
inline ::google::protobuf::uint32 CConfig::cmd() const {
  return cmd_;
}
inline void CConfig::set_cmd(::google::protobuf::uint32 value) {
  set_has_cmd();
  cmd_ = value;
}

// -------------------------------------------------------------------

// SConfig

// required uint32 cmd = 1 [default = 20479];
inline bool SConfig::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SConfig::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SConfig::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SConfig::clear_cmd() {
  cmd_ = 20479u;
  clear_has_cmd();
}
inline ::google::protobuf::uint32 SConfig::cmd() const {
  return cmd_;
}
inline void SConfig::set_cmd(::google::protobuf::uint32 value) {
  set_has_cmd();
  cmd_ = value;
}

// optional bool mail = 2;
inline bool SConfig::has_mail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SConfig::set_has_mail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SConfig::clear_has_mail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SConfig::clear_mail() {
  mail_ = false;
  clear_has_mail();
}
inline bool SConfig::mail() const {
  return mail_;
}
inline void SConfig::set_mail(bool value) {
  set_has_mail();
  mail_ = value;
}

// optional bool active = 3;
inline bool SConfig::has_active() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SConfig::set_has_active() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SConfig::clear_has_active() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SConfig::clear_active() {
  active_ = false;
  clear_has_active();
}
inline bool SConfig::active() const {
  return active_;
}
inline void SConfig::set_active(bool value) {
  set_has_active();
  active_ = value;
}

// optional bool firstbuy = 4;
inline bool SConfig::has_firstbuy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SConfig::set_has_firstbuy() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SConfig::clear_has_firstbuy() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SConfig::clear_firstbuy() {
  firstbuy_ = false;
  clear_has_firstbuy();
}
inline bool SConfig::firstbuy() const {
  return firstbuy_;
}
inline void SConfig::set_firstbuy(bool value) {
  set_has_firstbuy();
  firstbuy_ = value;
}

// optional bool task = 5;
inline bool SConfig::has_task() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SConfig::set_has_task() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SConfig::clear_has_task() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SConfig::clear_task() {
  task_ = false;
  clear_has_task();
}
inline bool SConfig::task() const {
  return task_;
}
inline void SConfig::set_task(bool value) {
  set_has_task();
  task_ = value;
}

// optional bool free = 6;
inline bool SConfig::has_free() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SConfig::set_has_free() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SConfig::clear_has_free() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SConfig::clear_free() {
  free_ = false;
  clear_has_free();
}
inline bool SConfig::free() const {
  return free_;
}
inline void SConfig::set_free(bool value) {
  set_has_free();
  free_ = value;
}

// optional bool fri = 7;
inline bool SConfig::has_fri() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SConfig::set_has_fri() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SConfig::clear_has_fri() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SConfig::clear_fri() {
  fri_ = false;
  clear_has_fri();
}
inline bool SConfig::fri() const {
  return fri_;
}
inline void SConfig::set_fri(bool value) {
  set_has_fri();
  fri_ = value;
}

// optional uint32 yqs = 8;
inline bool SConfig::has_yqs() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SConfig::set_has_yqs() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SConfig::clear_has_yqs() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SConfig::clear_yqs() {
  yqs_ = 0u;
  clear_has_yqs();
}
inline ::google::protobuf::uint32 SConfig::yqs() const {
  return yqs_;
}
inline void SConfig::set_yqs(::google::protobuf::uint32 value) {
  set_has_yqs();
  yqs_ = value;
}

// -------------------------------------------------------------------

// SPushCurrency

// optional uint32 cmd = 1 [default = 24576];
inline bool SPushCurrency::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SPushCurrency::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SPushCurrency::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SPushCurrency::clear_cmd() {
  cmd_ = 24576u;
  clear_has_cmd();
}
inline ::google::protobuf::uint32 SPushCurrency::cmd() const {
  return cmd_;
}
inline void SPushCurrency::set_cmd(::google::protobuf::uint32 value) {
  set_has_cmd();
  cmd_ = value;
}

// optional uint32 diamond = 2;
inline bool SPushCurrency::has_diamond() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SPushCurrency::set_has_diamond() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SPushCurrency::clear_has_diamond() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SPushCurrency::clear_diamond() {
  diamond_ = 0u;
  clear_has_diamond();
}
inline ::google::protobuf::uint32 SPushCurrency::diamond() const {
  return diamond_;
}
inline void SPushCurrency::set_diamond(::google::protobuf::uint32 value) {
  set_has_diamond();
  diamond_ = value;
}

// optional uint32 card = 3;
inline bool SPushCurrency::has_card() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SPushCurrency::set_has_card() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SPushCurrency::clear_has_card() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SPushCurrency::clear_card() {
  card_ = 0u;
  clear_has_card();
}
inline ::google::protobuf::uint32 SPushCurrency::card() const {
  return card_;
}
inline void SPushCurrency::set_card(::google::protobuf::uint32 value) {
  set_has_card();
  card_ = value;
}

// optional uint32 gold = 4;
inline bool SPushCurrency::has_gold() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SPushCurrency::set_has_gold() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SPushCurrency::clear_has_gold() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SPushCurrency::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 SPushCurrency::gold() const {
  return gold_;
}
inline void SPushCurrency::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
}

// optional uint32 cdiamond = 5;
inline bool SPushCurrency::has_cdiamond() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SPushCurrency::set_has_cdiamond() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SPushCurrency::clear_has_cdiamond() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SPushCurrency::clear_cdiamond() {
  cdiamond_ = 0u;
  clear_has_cdiamond();
}
inline ::google::protobuf::uint32 SPushCurrency::cdiamond() const {
  return cdiamond_;
}
inline void SPushCurrency::set_cdiamond(::google::protobuf::uint32 value) {
  set_has_cdiamond();
  cdiamond_ = value;
}

// optional uint32 ccard = 6;
inline bool SPushCurrency::has_ccard() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SPushCurrency::set_has_ccard() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SPushCurrency::clear_has_ccard() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SPushCurrency::clear_ccard() {
  ccard_ = 0u;
  clear_has_ccard();
}
inline ::google::protobuf::uint32 SPushCurrency::ccard() const {
  return ccard_;
}
inline void SPushCurrency::set_ccard(::google::protobuf::uint32 value) {
  set_has_ccard();
  ccard_ = value;
}

// optional uint32 cgold = 7;
inline bool SPushCurrency::has_cgold() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SPushCurrency::set_has_cgold() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SPushCurrency::clear_has_cgold() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SPushCurrency::clear_cgold() {
  cgold_ = 0u;
  clear_has_cgold();
}
inline ::google::protobuf::uint32 SPushCurrency::cgold() const {
  return cgold_;
}
inline void SPushCurrency::set_cgold(::google::protobuf::uint32 value) {
  set_has_cgold();
  cgold_ = value;
}

// optional uint32 err = 8;
inline bool SPushCurrency::has_err() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SPushCurrency::set_has_err() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SPushCurrency::clear_has_err() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SPushCurrency::clear_err() {
  err_ = 0u;
  clear_has_err();
}
inline ::google::protobuf::uint32 SPushCurrency::err() const {
  return err_;
}
inline void SPushCurrency::set_err(::google::protobuf::uint32 value) {
  set_has_err();
  err_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ConfigProto_2eproto__INCLUDED
